
1、使用service向主intent传送消息
   在service中通过广播broadcast通知Activity消息，如更新界面。

2、设置按钮，启动服务，或者停止服务：

    前面定义 String BC_RECEIVER = "com.msc.plr.MainActivity";
//处理按钮事件
    public void clickHandle(View v){
        switch(v.getId()){
        case R.id.btnPlayOrPause:   //启动服务按钮响应方法
            intent = new Intent(MainActivity.this, com.msc.plr.MyAudioService.class);
                                //主组件          //服务类 
            Bundle bundle2service = new Bundle();
            bundle2service.putString("audioPath", AUDIO_PATH);//前面要定义AUDIO_PATH
            //BC_RECEIVER也要在前面定义，并在manifest.xml里注册
            bundle2service.putString("bc_receiver", BC_RECEIVER);
            intent.putExtras(bundle2service);
            startService(intent);//开启服务
            break;
        case R.id.btnStop:   //停止服务
            if(intent != null){
                stopService(intent);//停止服务
            }
            break;
        }
    }

   这里的BC_RECEIVER,就是接收服务广播消息的类：
   在manifest.xml中注册：
    com.msc.plr为包名，如加上类名，则会崩溃
        <receiver android:name=".MainActivity" >
            <intent-filter>
                <action android:name="com.msc.plr" />  
            </intent-filter>
        </receiver>


3、注册一个广播接收
　@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        btnStartOrPause = (Button) findViewById(R.id.btnPlayOrPause);
        btnStop = (Button) findViewById(R.id.btnStop);
        
        //onCreate()里注册BroadcastReceiver
        //onDestroy()里解除注册
        //下面的"com.msc.plr"要在manifest.xml里注册　　
        IntentFilter filter = new IntentFilter("com.msc.plr.MainActivity");
        registerReceiver(updatUIReceiver, filter);
        
    }

@Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(updatUIReceiver);
    }


4、再定义一个接收处理过程，即上面的updatUIReceiver
   定义一个类内全局的对象；
    //定义一个BroadcastReceiver
    private BroadcastReceiver updatUIReceiver = new BroadcastReceiver() {
        //当service发出广播后，此方法就可以得到service传回来的值
        @Override
        public void onReceive(Context context, Intent intent) {
            //更新界面。这里改变Button的值
            //得到intent返回来的值,0表示此时是播放，1表示暂停, 2是停止
            int backFlag = intent.getExtras().getInt("backFlag");
            switch(backFlag){
            case 0:
                btnStartOrPause.setText("暂停");
                break;
            case 1:
            case 2:
                btnStartOrPause.setText("播放");
                break;
            }
        }
    };


5、在服务类中，发送广播内容：
     这里通过sendBC4UpdateUI发送广播，bc_receiver为接收广播的类
     在服务类中onStart处理业务后，调用sendBC4UpdateUI
     private void sendBC4UpdateUI(int flag) {
        intent2bc = new Intent(bc_receiver);//bc_receiver前面已有定义，是从Activity传过来的
        //如果缺少下面这句，关掉再重新打开播放器里点“停止”并不能停掉
        intent2bc.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        bundle2bc = new Bundle();
        bundle2bc.putInt("backFlag", flag);//把flag传回去
        intent2bc.putExtras(bundle2bc);
        sendBroadcast(intent2bc);//发送广播
　　    //发送后，在Activity里的updateUIReceiver的onReceiver()方法里就能做相应的更新界面的工作了
    }

服务类需要在manifest.xml中注册
<service android:name="com.msc.plr.MyAudioService"></service>

